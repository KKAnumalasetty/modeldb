// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import java.util.*;
import java.util.function.Function;

public class VersionEnvironmentBlob {
  public Integer Major;
  public Integer Minor;
  public Integer Patch;
  public String Suffix;

  public VersionEnvironmentBlob() {
    this.Major = 0;
    this.Minor = 0;
    this.Patch = 0;
    this.Suffix = null;
  }

  public VersionEnvironmentBlob setMajor(Integer value) {
    this.Major = value;
    return this;
  }

  public VersionEnvironmentBlob setMinor(Integer value) {
    this.Minor = value;
    return this;
  }

  public VersionEnvironmentBlob setPatch(Integer value) {
    this.Patch = value;
    return this;
  }

  public VersionEnvironmentBlob setSuffix(String value) {
    this.Suffix = value;
    return this;
  }

  public static VersionEnvironmentBlob fromProto(
      ai.verta.modeldb.versioning.VersionEnvironmentBlob blob) {
    if (blob == null) {
      return null;
    }

    VersionEnvironmentBlob obj = new VersionEnvironmentBlob();
    {
      Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob, Integer> f =
          x -> (blob.getMajor());
      obj.Major = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob, Integer> f =
          x -> (blob.getMinor());
      obj.Minor = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob, Integer> f =
          x -> (blob.getPatch());
      obj.Patch = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob, String> f =
          x -> (blob.getSuffix());
      obj.Suffix = f.apply(blob);
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder toProto() {
    ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder builder =
        ai.verta.modeldb.versioning.VersionEnvironmentBlob.newBuilder();
    {
      if (this.Major != null) {
        Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.setMajor(this.Major);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Minor != null) {
        Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.setMinor(this.Minor);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Patch != null) {
        Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.setPatch(this.Patch);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Suffix != null) {
        Function<ai.verta.modeldb.versioning.VersionEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.setSuffix(this.Suffix);
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitVersionEnvironmentBlob(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepInteger(this.Major);
    visitor.preVisitDeepInteger(this.Minor);
    visitor.preVisitDeepInteger(this.Patch);
    visitor.preVisitDeepString(this.Suffix);
  }

  public VersionEnvironmentBlob postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitVersionEnvironmentBlob(this);
  }

  public VersionEnvironmentBlob postVisitDeep(Visitor visitor) throws ModelDBException {
    this.Major = visitor.postVisitDeepInteger(this.Major);
    this.Minor = visitor.postVisitDeepInteger(this.Minor);
    this.Patch = visitor.postVisitDeepInteger(this.Patch);
    this.Suffix = visitor.postVisitDeepString(this.Suffix);
    return this.postVisitShallow(visitor);
  }
}
