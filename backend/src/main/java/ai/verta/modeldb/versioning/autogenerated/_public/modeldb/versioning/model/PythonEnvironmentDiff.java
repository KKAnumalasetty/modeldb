// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

public class PythonEnvironmentDiff {
  public DiffStatusEnumDiffStatus VersionStatus;
  public VersionEnvironmentBlob VersionA;
  public VersionEnvironmentBlob VersionB;
  public List<PythonRequirementEnvironmentDiff> Requirements;
  public List<PythonRequirementEnvironmentDiff> Constraints;

  public PythonEnvironmentDiff() {
    this.VersionStatus = null;
    this.VersionA = null;
    this.VersionB = null;
    this.Requirements = null;
    this.Constraints = null;
  }

  public PythonEnvironmentDiff setVersionStatus(DiffStatusEnumDiffStatus value) {
    this.VersionStatus = value;
    return this;
  }

  public PythonEnvironmentDiff setVersionA(VersionEnvironmentBlob value) {
    this.VersionA = value;
    return this;
  }

  public PythonEnvironmentDiff setVersionB(VersionEnvironmentBlob value) {
    this.VersionB = value;
    return this;
  }

  public PythonEnvironmentDiff setRequirements(List<PythonRequirementEnvironmentDiff> value) {
    this.Requirements = value;
    return this;
  }

  public PythonEnvironmentDiff setConstraints(List<PythonRequirementEnvironmentDiff> value) {
    this.Constraints = value;
    return this;
  }

  public static PythonEnvironmentDiff fromProto(
      ai.verta.modeldb.versioning.PythonEnvironmentDiff blob) {
    if (blob == null) {
      return null;
    }

    PythonEnvironmentDiff obj = new PythonEnvironmentDiff();
    {
      Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff, DiffStatusEnumDiffStatus> f =
          x -> DiffStatusEnumDiffStatus.fromProto(blob.getVersionStatus());
      obj.VersionStatus = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff, VersionEnvironmentBlob> f =
          x -> VersionEnvironmentBlob.fromProto(blob.getVersionA());
      obj.VersionA = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff, VersionEnvironmentBlob> f =
          x -> VersionEnvironmentBlob.fromProto(blob.getVersionB());
      obj.VersionB = f.apply(blob);
    }
    {
      Function<
              ai.verta.modeldb.versioning.PythonEnvironmentDiff,
              List<PythonRequirementEnvironmentDiff>>
          f =
              x ->
                  blob.getRequirementsList().stream()
                      .map(PythonRequirementEnvironmentDiff::fromProto)
                      .collect(Collectors.toList());
      obj.Requirements = f.apply(blob);
    }
    {
      Function<
              ai.verta.modeldb.versioning.PythonEnvironmentDiff,
              List<PythonRequirementEnvironmentDiff>>
          f =
              x ->
                  blob.getConstraintsList().stream()
                      .map(PythonRequirementEnvironmentDiff::fromProto)
                      .collect(Collectors.toList());
      obj.Constraints = f.apply(blob);
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder toProto() {
    ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder builder =
        ai.verta.modeldb.versioning.PythonEnvironmentDiff.newBuilder();
    {
      if (this.VersionStatus != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setVersionStatus(this.VersionStatus.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.VersionA != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setVersionA(this.VersionA.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.VersionB != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setVersionB(this.VersionB.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Requirements != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder, Void> f =
            x -> {
              builder.addAllRequirements(
                  this.Requirements.stream()
                      .map(y -> y.toProto().build())
                      .collect(Collectors.toList()));
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Constraints != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentDiff.Builder, Void> f =
            x -> {
              builder.addAllConstraints(
                  this.Constraints.stream()
                      .map(y -> y.toProto().build())
                      .collect(Collectors.toList()));
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitPythonEnvironmentDiff(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepDiffStatusEnumDiffStatus(this.VersionStatus);
    visitor.preVisitDeepVersionEnvironmentBlob(this.VersionA);
    visitor.preVisitDeepVersionEnvironmentBlob(this.VersionB);
    visitor.preVisitDeepListOfPythonRequirementEnvironmentDiff(this.Requirements);
    visitor.preVisitDeepListOfPythonRequirementEnvironmentDiff(this.Constraints);
  }

  public PythonEnvironmentDiff postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitPythonEnvironmentDiff(this);
  }

  public PythonEnvironmentDiff postVisitDeep(Visitor visitor) throws ModelDBException {
    this.VersionStatus = visitor.postVisitDeepDiffStatusEnumDiffStatus(this.VersionStatus);
    this.VersionA = visitor.postVisitDeepVersionEnvironmentBlob(this.VersionA);
    this.VersionB = visitor.postVisitDeepVersionEnvironmentBlob(this.VersionB);
    this.Requirements =
        visitor.postVisitDeepListOfPythonRequirementEnvironmentDiff(this.Requirements);
    this.Constraints =
        visitor.postVisitDeepListOfPythonRequirementEnvironmentDiff(this.Constraints);
    return this.postVisitShallow(visitor);
  }
}
