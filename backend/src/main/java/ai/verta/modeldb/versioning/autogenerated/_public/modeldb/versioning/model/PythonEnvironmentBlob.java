// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

public class PythonEnvironmentBlob {
  public VersionEnvironmentBlob Version;
  public List<PythonRequirementEnvironmentBlob> Requirements;
  public List<PythonRequirementEnvironmentBlob> Constraints;

  public PythonEnvironmentBlob() {
    this.Version = null;
    this.Requirements = null;
    this.Constraints = null;
  }

  public PythonEnvironmentBlob setVersion(VersionEnvironmentBlob value) {
    this.Version = value;
    return this;
  }

  public PythonEnvironmentBlob setRequirements(List<PythonRequirementEnvironmentBlob> value) {
    this.Requirements = value;
    return this;
  }

  public PythonEnvironmentBlob setConstraints(List<PythonRequirementEnvironmentBlob> value) {
    this.Constraints = value;
    return this;
  }

  public static PythonEnvironmentBlob fromProto(
      ai.verta.modeldb.versioning.PythonEnvironmentBlob blob) {
    if (blob == null) {
      return null;
    }

    PythonEnvironmentBlob obj = new PythonEnvironmentBlob();
    {
      Function<ai.verta.modeldb.versioning.PythonEnvironmentBlob, VersionEnvironmentBlob> f =
          x -> VersionEnvironmentBlob.fromProto(blob.getVersion());
      obj.Version = f.apply(blob);
    }
    {
      Function<
              ai.verta.modeldb.versioning.PythonEnvironmentBlob,
              List<PythonRequirementEnvironmentBlob>>
          f =
              x ->
                  blob.getRequirementsList().stream()
                      .map(PythonRequirementEnvironmentBlob::fromProto)
                      .collect(Collectors.toList());
      obj.Requirements = f.apply(blob);
    }
    {
      Function<
              ai.verta.modeldb.versioning.PythonEnvironmentBlob,
              List<PythonRequirementEnvironmentBlob>>
          f =
              x ->
                  blob.getConstraintsList().stream()
                      .map(PythonRequirementEnvironmentBlob::fromProto)
                      .collect(Collectors.toList());
      obj.Constraints = f.apply(blob);
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.PythonEnvironmentBlob.Builder toProto() {
    ai.verta.modeldb.versioning.PythonEnvironmentBlob.Builder builder =
        ai.verta.modeldb.versioning.PythonEnvironmentBlob.newBuilder();
    {
      if (this.Version != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.setVersion(this.Version.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Requirements != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.addAllRequirements(
                  this.Requirements.stream()
                      .map(y -> y.toProto().build())
                      .collect(Collectors.toList()));
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Constraints != null) {
        Function<ai.verta.modeldb.versioning.PythonEnvironmentBlob.Builder, Void> f =
            x -> {
              builder.addAllConstraints(
                  this.Constraints.stream()
                      .map(y -> y.toProto().build())
                      .collect(Collectors.toList()));
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitPythonEnvironmentBlob(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepVersionEnvironmentBlob(this.Version);
    visitor.preVisitDeepListOfPythonRequirementEnvironmentBlob(this.Requirements);
    visitor.preVisitDeepListOfPythonRequirementEnvironmentBlob(this.Constraints);
  }

  public PythonEnvironmentBlob postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitPythonEnvironmentBlob(this);
  }

  public PythonEnvironmentBlob postVisitDeep(Visitor visitor) throws ModelDBException {
    this.Version = visitor.postVisitDeepVersionEnvironmentBlob(this.Version);
    this.Requirements =
        visitor.postVisitDeepListOfPythonRequirementEnvironmentBlob(this.Requirements);
    this.Constraints =
        visitor.postVisitDeepListOfPythonRequirementEnvironmentBlob(this.Constraints);
    return this.postVisitShallow(visitor);
  }
}
