// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;

public class EnvironmentDiff {
  public PythonEnvironmentDiff Python;
  public DockerEnvironmentDiff Docker;
  public List<EnvironmentVariablesDiff> EnvironmentVariables;
  public DiffStatusEnumDiffStatus CommandLineStatus;
  public List<String> CommandLineA;
  public List<String> CommandLineB;

  public EnvironmentDiff() {
    this.Python = null;
    this.Docker = null;
    this.EnvironmentVariables = null;
    this.CommandLineStatus = null;
    this.CommandLineA = null;
    this.CommandLineB = null;
  }

  public EnvironmentDiff setPython(PythonEnvironmentDiff value) {
    this.Python = value;
    return this;
  }

  public EnvironmentDiff setDocker(DockerEnvironmentDiff value) {
    this.Docker = value;
    return this;
  }

  public EnvironmentDiff setEnvironmentVariables(List<EnvironmentVariablesDiff> value) {
    this.EnvironmentVariables = value;
    return this;
  }

  public EnvironmentDiff setCommandLineStatus(DiffStatusEnumDiffStatus value) {
    this.CommandLineStatus = value;
    return this;
  }

  public EnvironmentDiff setCommandLineA(List<String> value) {
    this.CommandLineA = value;
    return this;
  }

  public EnvironmentDiff setCommandLineB(List<String> value) {
    this.CommandLineB = value;
    return this;
  }

  public static EnvironmentDiff fromProto(ai.verta.modeldb.versioning.EnvironmentDiff blob) {
    if (blob == null) {
      return null;
    }

    EnvironmentDiff obj = new EnvironmentDiff();
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, PythonEnvironmentDiff> f =
          x -> PythonEnvironmentDiff.fromProto(blob.getPython());
      obj.Python = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, DockerEnvironmentDiff> f =
          x -> DockerEnvironmentDiff.fromProto(blob.getDocker());
      obj.Docker = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, List<EnvironmentVariablesDiff>> f =
          x ->
              blob.getEnvironmentVariablesList().stream()
                  .map(EnvironmentVariablesDiff::fromProto)
                  .collect(Collectors.toList());
      obj.EnvironmentVariables = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, DiffStatusEnumDiffStatus> f =
          x -> DiffStatusEnumDiffStatus.fromProto(blob.getCommandLineStatus());
      obj.CommandLineStatus = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, List<String>> f =
          x -> blob.getCommandLineAList();
      obj.CommandLineA = f.apply(blob);
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentDiff, List<String>> f =
          x -> blob.getCommandLineBList();
      obj.CommandLineB = f.apply(blob);
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.EnvironmentDiff.Builder toProto() {
    ai.verta.modeldb.versioning.EnvironmentDiff.Builder builder =
        ai.verta.modeldb.versioning.EnvironmentDiff.newBuilder();
    {
      if (this.Python != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setPython(this.Python.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Docker != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setDocker(this.Docker.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.EnvironmentVariables != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.addAllEnvironmentVariables(
                  this.EnvironmentVariables.stream()
                      .map(y -> y.toProto().build())
                      .collect(Collectors.toList()));
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.CommandLineStatus != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.setCommandLineStatus(this.CommandLineStatus.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.CommandLineA != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.addAllCommandLineA(this.CommandLineA);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.CommandLineB != null) {
        Function<ai.verta.modeldb.versioning.EnvironmentDiff.Builder, Void> f =
            x -> {
              builder.addAllCommandLineB(this.CommandLineB);
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitEnvironmentDiff(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepPythonEnvironmentDiff(this.Python);
    visitor.preVisitDeepDockerEnvironmentDiff(this.Docker);
    visitor.preVisitDeepListOfEnvironmentVariablesDiff(this.EnvironmentVariables);
    visitor.preVisitDeepDiffStatusEnumDiffStatus(this.CommandLineStatus);
    visitor.preVisitDeepListOfString(this.CommandLineA);
    visitor.preVisitDeepListOfString(this.CommandLineB);
  }

  public EnvironmentDiff postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitEnvironmentDiff(this);
  }

  public EnvironmentDiff postVisitDeep(Visitor visitor) throws ModelDBException {
    this.Python = visitor.postVisitDeepPythonEnvironmentDiff(this.Python);
    this.Docker = visitor.postVisitDeepDockerEnvironmentDiff(this.Docker);
    this.EnvironmentVariables =
        visitor.postVisitDeepListOfEnvironmentVariablesDiff(this.EnvironmentVariables);
    this.CommandLineStatus = visitor.postVisitDeepDiffStatusEnumDiffStatus(this.CommandLineStatus);
    this.CommandLineA = visitor.postVisitDeepListOfString(this.CommandLineA);
    this.CommandLineB = visitor.postVisitDeepListOfString(this.CommandLineB);
    return this.postVisitShallow(visitor);
  }
}
